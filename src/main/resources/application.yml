server:
  port: 8080
  servlet:
    context-path: /walk/
  error:
    include-binding-errors: always
    include-message: always
    include-stacktrace: on_param
#spring:   // memory db
#  datasource:
#    url: jdbc:h2:file:~/h2data;AUTO_SERVER=TRUE
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver

# local mysql test db
spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:mysql://localhost:3306/walk?serverTimezone=UTC&characterEncoding=UTF-8
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    # pool size = 쓰레드의 최대 수 X (1 task에 필요한 커넥션 개수  -1 ) + 1
    # Connection Pool이 적으면 Thread의 대기시간이 길어져 성능 저하가 발생하고,
    # Connection Pool의 크기 증가에도 Context Switching, Disk I/O 등 다양한 원인에 의해서 한계가 존재합니다.
    hikari:
      maximum-pool-size: 9
  h2.console.enabled: true
  jpa:
    show-sql: true
    hibernate:
      # create로 설정하면 실행 시, 기존 테이블을 삭제하고 새로 생성하게 됨.
      # ddl-auto: validate
       ddl-auto: update
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true
  output:
    ansi:
      enabled: always
logging:
  level:
    org.hibernate.type: trace
